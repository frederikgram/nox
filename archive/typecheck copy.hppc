
#pragma once

#include "lexer.hpp"
#include "parser.hpp"
#include "tokens.hpp"
#include <assert.h>
#include <math.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <vector>
using namespace std;

enum VARIABLE_TYPE_ENUM
{
    V_INTEGER,
    V_CHARARACTER,
    V_STRING,
    V_ARRAY,
    V_FUNCTION,
    V_VOID, // Unused
    V_UNKNOWN,
    V_IDENTIFIER
};

struct VARIABLE_TYPE
{
    enum VARIABLE_TYPE_ENUM type;

    int size = 0;
    int array_size = 0;
    struct VARIABLE *array_type = NULL;
    struct VARIABLE *return_type = NULL;
};

struct VARIABLE
{
    void *value;
    std::string name;
    struct VARIABLE_TYPE *type;
    std::vector<VARIABLE *> parameters;
};

struct SCOPE
{
    map<std::string, struct VARIABLE *> variables;
    struct SCOPE *parent;
    int id;
};

struct AST_NODE *typecheck(struct AST_NODE *root);
